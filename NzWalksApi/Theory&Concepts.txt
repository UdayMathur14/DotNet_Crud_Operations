Dot NET
.NET is a free, cross-platform, open source developer platform for building many different types of applications.
With .NET, you can use multiple languages, editors, and libraries to build for web, mobile, desktop, games, IoT, and more.

Q1)
What is Rest ?
Ans : Representational State Transfer 
: 1 - Style of artchitecture for buliding web services 
: 2 - Set of principles that how web services should be designed and interact 
with each other .
: 3 - Resource that can be identified and manipulated through a web service .
:4 - Resources are accesed through urls .
:5 - Http verb are used to perform actions on these resourse.

Stateless : that server should not store any client state between thes requests .
this increases readabilty and scalibility beacuse server can handle multiple request 
simuntaneously .


Q2) Routing in asp.net core :

It is the Process of matching incoming HttpRequests to the appropiate actions methods 
that will handle those requests .
Routing is used to map the url of a request to a controller and then its action method.



Q3) Swagger : 
Popular tool for documenting api's and providing a user friendly interface for testing 
and exploring apis.


Q4) What is IactionResult Type : 
IActionResult is an interface that can return multiple types of data.
For example, you can use IActionResult to return data like NotFound, OK, or Redirect.
IActionResult is an interface that allows you to create a custom response.

Q5) DbContext Class 
ans: It is the class that represents a session with a database and provides a set of apis's
for performing database operations . 
-Maintaining a connection to Db , Track Changes , Perform crud operations , 
bridge between domain models and the database 

-Dbcontext class is the primary class that is responsible for interacting with the database 
and perforimng crud operation in db tables . 

Controller -> DbContext -> Database

Q6) Dbset : it is the property of db context class that represent a collection of entities 
in the database .

Q7 ) ConnectionString : We can use this connection string through entity framework and talk 
to a sql server and a database inside the sql server .

Q8) Dependancy Injection : Dependancy injection is a design pattern to increase the 
maintainbility and testability of applications by reducing the coupling between components.

DI Defination : insted of instititing objects within a class those objects are passed as parameter to the class
like passing it to the constructor.

Without DI Uses faults:
if later on class name is changes or we have to 
implement a different implementation of myService class, then we have to change all the controllers or classes that usses
this MyService.


With Dependancy Injection:
Insted of creating the instnces within the class , we can easily inject the interface myservice
in our application in program.cs 
AddScoped<IMyInterface , MYserice> and also provides the implementtion details.
We can easily inject the service as parameter to the controller .and we can use this 
Service throughout the application . We can esaily change the implemenetation as 
myservice is changes to the myservice2 and we can easily change it in the program.cs file.


Q9)Dtos = DATA transfer objects 
:Used to transfer data between different layers .
:Manipulate the properties in dto 
:Security , performance because models are directly coupled with the database 
:Reduce the Risk of 

client ->Dto->Api ->DomainModel->Database.
Modles are talk to the datatabse and in return we will return the model . so we need to add a layer 
and do mapping and show the dto to the user .